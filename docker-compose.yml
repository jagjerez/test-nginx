services:
  ngnix:
    image: nginx:stable-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config:/etc/nginx
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - backend
  # certbot:
  #   image: certbot/certbot:latest
  #   depends_on:
  #     - ngnix
  #   command: certonly --webroot -w /var/www/certbot --force-renewal --email jagjerez2015@gmail.com -d prueba.api.jagjerez.info --agree-tos
  #   # command: >-
  #   #          certonly --reinstall --webroot --webroot-path=/var/www/certbot
  #   #          --email jagjerez2015@gmail.com --agree-tos --no-eff-email
  #   #          -d prueba.api.jagjerez.info
  #   volumes:
  #     - ./certbot/conf:/etc/letsencrypt
  #     - ./certbot/www:/var/www/certbot
  #   networks:
  #     - backend
  app1:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - REPLICA_NUMBER=1
    ports:
      - "5000"
    networks:
      - backend
    deploy:
      mode: replicated
      replicas: 1
      restart_policy: 
        condition: on-failure
      placement:
        constraints:
          - node.labels.type == app1
  app2:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - REPLICA_NUMBER=2
    ports:
      - "5000"
    networks:
      - backend
    deploy:
      mode: replicated
      replicas: 1
      restart_policy: 
        condition: on-failure
      placement:
        constraints:
          - node.labels.type == app2
  app3:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - REPLICA_NUMBER=3
    ports:
      - "5000"
    networks:
      - backend
    deploy:
      mode: replicated
      replicas: 1
      restart_policy: 
        condition: on-failure
      placement:
        constraints:
          - node.labels.type == app3
  app4:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - REPLICA_NUMBER=4
    ports:
      - "5000"
    networks:
      - backend
    deploy:
      mode: replicated
      replicas: 1
      restart_policy: 
        condition: on-failure
      placement:
        constraints:
          - node.labels.type == app4
networks:
  backend: